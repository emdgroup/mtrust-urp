name: "Prepare flutter runner"
description: "Prepares a flutter project by installing dependencies and running build_runner"
inputs:
  directory:
    description: "Directory"
    required: true
    default: "."

  artifactory_key:
    description: "Artifactory key"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.24.3"

    - name: 🛠️ Install dependencies
      run: |
        npm install yaml
      shell: bash

    - name: 🔀 Setup project
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const YAML = require('yaml');
          const path = require('path');
          const {execSync} = require('child_process');
          const pubspec = fs.readFileSync('${{ inputs.directory }}/pubspec.yaml', 'utf8');
          const doc = YAML.parse(pubspec);

          const directory = `${{ inputs.directory }}`;

          function findExampleDirsWithPubspec(dir) {
            let result = [];
            const files = fs.readdirSync(dir);
          
            files.forEach(file => {
              const fullPath = path.join(dir, file);
              if (fs.statSync(fullPath).isDirectory()) {
                if (file.startsWith('example')) {
                  // Check if the directory contains pubspec.yaml
                  const pubspecPath = path.join(fullPath, 'pubspec.yaml');
                  if (fs.existsSync(pubspecPath)) {
                    result.push(fullPath);
                  }
                }
                // Recursively search in subdirectories
                result = result.concat(findExampleDirsWithPubspec(fullPath));
              }
            });
          
            return result;
          }
          
          // Find all "example" directories that contain a pubspec.yaml file
          const exampleDirs = findExampleDirsWithPubspec(directory);
          
          if (exampleDirs.length > 0) {
            exampleDirs.forEach(exampleDir => {
              console.log(`Running pub get in ${exampleDir} directory`);
              execSync(`cd ${directory}/${exampleDir} && dart pub get`, { stdio: 'inherit' });
            });
          } else {
            console.log('No example directories with pubspec.yaml found.');
          }

          if( doc.dev_dependencies && doc.dev_dependencies.build_runner){
            console.log('Running build_runner');
            execSync('cd ${{ inputs.directory }} && dart pub run build_runner build --delete-conflicting-outputs', {stdio: 'inherit'});
          }

          if(doc.flutter && doc.flutter.generate){
            console.log('Running flutter gen-l10n');
            execSync('cd ${{ inputs.directory }} && flutter gen-l10n', {stdio: 'inherit'});
          }
